/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}


.summary-filter-vertical-menu {
    height: 160px;
    border: 1px solid gray;
    border-radius: 4px;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

.vcontainer {
  display: flex;
  flex-direction: column;
}

.flexitem {
  flex: 1 0 auto;
  align-self: auto;
}

.pure-g > div {
    box-sizing: border-box;
}

.l-box {
    padding: 1em;
}

/*
  #FFF - white
  #1C9352 - green
  rgba(28, 147, 82, 1) - green
  #406A9E - blue
  #32373A - black
  #3D4347 - black light
  #F9F9F9 - grey
  #DDD    - light grey
  #EAEAEA - light on dark text
*/

.blue-bg {
  background: #406A9E;
}

.green-bg {
 background: #1C9352;
}

.grey-bg {
 background: #DDD;
}

.black-bg {
  background: #32373A;
}

a {
  color: #406A9E;
}

.content {
  padding: 0 1rem 0 1rem;
}

.pure-menu,
.blue-bg, .green-bg, .black-bg
.pure-menu-item, .pure-menu-heading {
  color: #FFF;
}

#menu
.pure-menu-item {
  border-bottom: 1px solid;
  border-color: #3D4347;
}

#menu
.pure-menu-item:last-child {
  border-bottom: 0px;
}

.pure-menu label {
  display: block;
  padding-bottom: 0.5em;
}

.pure-menu-heading {
  font-weight: bold;
}

.menu-title {
  font-size: 110%;
  line-height: 3em;
  margin-bottom: 0.5em;
}

.pure-menu-item {
  padding: .5em .8em;
}

#menu
.pure-button {
  min-width: 160px;
}

.black-bg
.pure-menu-item {
  color: #EAEAEA;
}

.pure-menu-link {
  cursor: pointer;
  color: #EAEAEA;
}

.black-bg
.pure-menu-link:hover,
.pure-menu-link:focus {
  background-color: #3D4347;
}

.pure-menu-input {
  line-height: 1.5em;
  color: #32373A;
}

.pure-menu-link:active {
  background-color: #1C9352;
}

/**
 * Add transition to containers so they can push in and out.
 *
 * via http://purecss.io/css/layouts/side-menu.css
 */
#layout,
#menu,
.menu-link {
    transition: all 0.2s ease-out;
}

/**
 * This is the parent `<div>` that contains the menu and the content area.
 *
 * via http://purecss.io/css/layouts/side-menu.css
 */
#layout {
    position: relative;
    padding-left: 0;
}
    #layout.active #menu {
        left: 200px;
        width: 200px;
    }

    #layout.active .menu-link {
        left: 200px;
    }

/*
The `#menu` `<div>` is the parent `<div>` that contains the `.pure-menu` that
appears on the left side of the page.
*/

#menu {
    margin-left: -200px; /* "#menu" width */
    width: 200px;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    z-index: 1000; /* so the menu or its navicon stays above all content */
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
}
    /*
    All anchors inside the menu should be styled like this.
    */
    #menu a {
        border: none;
        padding: 0.6em 0 0.6em 0.6em;
    }

    /*
    Remove all background/borders, since we are applying them to #menu.
    */
     #menu .pure-menu,
     #menu .pure-menu ul {
        border: none;
        background: transparent;
    }

    #menu .pure-menu li {
      margin: 1em;
    }

    /*
    Add that light border to separate items into groups.
    */
    #menu .pure-menu ul,
    #menu .pure-menu .menu-item-divided {
        border-top: 1px solid #333;
    }
        /*
        Change color of the anchor links on hover/focus.
        */
        #menu .pure-menu li a:hover,
        #menu .pure-menu li a:focus {
            background: #333;
        }

        /*
        This styles a link within a selected menu item `<li>`.
        */
        #menu .pure-menu-selected a {
            color: #fff;
        }

    /*
    This styles the menu heading.
    */
    #menu .pure-menu-heading {
        margin-top: 0;
        margin-left: 0;
        margin-right: 0;
    }

/* -- Dynamic Button For Responsive Menu -------------------------------------*/

/*
The button to open/close the Menu is custom-made and not part of Pure. Here's
how it works:
*/

/*
`.menu-link` represents the responsive menu toggle that shows/hides on
small screens.
*/
.menu-link {
    position: fixed;
    display: block; /* show this only on small screens */
    top: 0;
    left: 0; /* "#menu width" */
    background: #000;
    background: rgba(0,0,0,0.7);
    font-size: 10px; /* change this value to increase/decrease button size */
    z-index: 10;
    width: 2em;
    height: auto;
    padding: 2.1em 1.6em;
}

    .menu-link:hover,
    .menu-link:focus {
        background: #000;
    }

    .menu-link span {
        position: relative;
        display: block;
    }

    .menu-link span,
    .menu-link span:before,
    .menu-link span:after {
        background-color: #fff;
        width: 100%;
        height: 0.2em;
    }

        .menu-link span:before,
        .menu-link span:after {
            position: absolute;
            margin-top: -0.6em;
            content: " ";
        }

        .menu-link span:after {
            margin-top: 0.6em;
        }


/* -- Responsive Styles (Media Queries) ------------------------------------- */

/*
Hides the menu at `48em`, but modify this based on your app's needs.
*/
@media (min-width: 48em) {

    .header,
    .content {
        padding-left: 2em;
        padding-right: 2em;
    }

    #layout {
        padding-left: 200px; /* left col width "#menu" */
        left: 0;
    }
    #menu {
        left: 200px;
    }

    .menu-link {
        position: fixed;
        left: 200px;
        display: none;
    }

    #layout.active .menu-link {
        left: 200px;
    }
}

@media (max-width: 48em) {
    /* Only apply this when the window is small. Otherwise, the following
    case results in extra padding on the left:
        * Make the window small.
        * Tap the menu to trigger the active state.
        * Make the window large again.
    */
    #layout.active {
        position: relative;
        left: 200px;
    }
}


.info-panel {
  border: 1px solid #DDD;
  margin: 0 0.5rem 2rem 0;
  padding: 0 0 0.3rem 0;
}

.info-panel-title {
  font-size: 1.5rem;
  margin: 0;
  font-weight: 100;
  padding: 0.5rem;
}

.info-panel-body {
  font-size: 1em;
  margin: 0.2em 0 0;
  padding: 0.5rem;
}

.panel {
  box-sizing: border-box;
  position: relative;
  padding: 1em;
  padding-bottom: 10px;
}

.table-list {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.table-list li {
  padding: 0.8em 0;
  border-bottom: 1px solid #e7e7e7;
}

.table-list li:last-child {
  padding: 0.8em 0;
  border-bottom: 0px;
}

.public_fixedDataTableCell_main {
  white-space: nowrap;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}

.public_fixedDataTableCell_cellContent {
  white-space: nowrap;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}

.sample-summary {
  text-align: center;
  background: rgb(250, 250, 250);
  margin: 2em auto;
  border-top: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
}

.spinner {
  height: 60px;
  width: 60px;
  margin: 94px auto 0 auto;
  position: relative;
  -webkit-animation: rotation .6s infinite linear;
  animation: rotation .6s infinite linear;
  border-left: 6px solid rgba(28, 147, 82, .15);
  border-right: 6px solid rgba(28, 147, 82, .15);
  border-bottom: 6px solid rgba(28, 147, 82, .15);
  border-top: 6px solid rgba(28, 147, 82, .8);
  border-radius: 100%;
}

@-webkit-keyframes rotation {
  from {
    -webkit-transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(359deg);
  }
}

@keyframes rotation {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg);
  }
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (min-resolution: 1.25dppx),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after,
    *:first-letter,
    *:first-line {
        background: transparent !important;
        color: #000 !important; /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
