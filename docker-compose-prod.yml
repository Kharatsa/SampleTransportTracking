version: '2'
services:


  #nginx:
  #   image: nginx
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - "/etc/nginx/conf.d"
  #     - "/etc/nginx/vhost.d"
  #     - "/usr/share/nginx/html"
  #     - "/etc/nginx-certs:/etc/nginx/certs:ro"
  #   networks:
  #     - proxy-tier
  # nginx-gen:
  #   image: jwilder/docker-gen
  #   container_name: nginx-gen
  #   volumes:
  #     - "/var/run/docker.sock:/tmp/docker.sock:ro"
  #     - "./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
  #   volumes_from:
  #     - nginx
  #   entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  # simple-site:
  #   image: nginx
  #   container_name: simple-site
  #   volumes:
  #     - "../../../volumes/examples/simple-site/conf.d/:/etc/nginx/conf.d"
  #   environment:
  #     - VIRTUAL_HOST=test.kharatsa.com
  #     - VIRTUAL_NETWORK=nginx-proxy
  #     - VIRTUAL_PORT=80
  #     - LETSENCRYPT_HOST=test.kharatsa.com
  #     - LETSENCRYPT_EMAIL=sts59@cornell.edu
  #     - LETSENCRYPT_TEST=true
  #   networks:
  #     - proxy-tier






  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /path/to/certs:/etc/nginx/certs:ro
    logging:
      driver: "json-file"
      options: 
        max-size: "2m"
        max-file: "10"
     networks:
       - proxy-tier
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/etc/nginx-certs:/etc/nginx/certs:rw"
    # environment:
    #   - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
  stt:
    container_name: app_stt
    restart: always
    image: kharatsa/strack:latest
    ports:
      - "8081:8081"
    volumes:
      - /var/log/stt/:/var/log/stt/
    environment:
      - STT_LISTEN_PORT=8081
      - STT_LISTEN_HOST=0.0.0.0
      - STT_PUBLIC_URL=https://$TL_HOSTNAME
      - ODK_PROTOCOL=http
      - ODK_HOSTNAME=odk
      - VIRTUAL_HOST=$TL_HOSTNAME
    env_file:
      - /etc/stt_creds
    logging:
      driver: "json-file"
      options: 
        max-size: "2m"
        max-file: "10"
    links:
      - odk
    networks:
      - proxy-tier
  odk:
    image: kharatsa/odkaggregate:latest
    container_name: odk_stt
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ODK_HOSTNAME=odk.$TL_HOSTNAME
      - ODK_PORT=8080
      - ODK_ADMIN_USERNAME=admin
      - VIRTUAL_HOST=odk.$TL_HOSTNAME
    env_file:
      - /etc/stt_creds
    logging:
      driver: "json-file"
      options: 
        max-size: "2m"
        max-file: "10"
    networks:
      - proxy-tier


networks:
  proxy-tier:
    external:
      name: nginx-proxy
